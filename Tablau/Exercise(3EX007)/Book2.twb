<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20251.25.0313.2002                               -->
<workbook original-version='18.1' source-build='2025.1.0 (20251.25.0313.2002)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <AnimationOnByDefault />
    <Layers />
    <MapboxVectorStylesAndLayers />
    <MarkAnimation />
    <ObjectModelEncapsulateLegacy />
    <ObjectModelExtractV2 />
    <ObjectModelTableType />
    <SchemaViewerObjectModel />
    <SheetIdentifierTracking />
    <_.fcp.VConnDownstreamExtractsWithWarnings.true...VConnDownstreamExtractsWithWarnings />
    <WindowsPersistSimpleIdentifiers />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource caption='corona (tOxmqE9sSWCNqdQnwEKU_Exercise 7)' inline='true' name='federated.0avkhsw1tk8hjy14qw54w1iuzaer' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='tOxmqE9sSWCNqdQnwEKU_Exercise 7' name='excel-direct.1ywnc541vxrjxt1488jfl0hzuaw3'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='E:/Cuvette Data Science Program/Cuvette/Tablau/Exercise(3EX007)/tOxmqE9sSWCNqdQnwEKU_Exercise 7.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <relation connection='excel-direct.1ywnc541vxrjxt1488jfl0hzuaw3' name='corona' table='[corona$]' type='table'>
          <columns gridOrigin='A1:C28:no:A1:C28:0' header='yes' outcome='6'>
            <column datatype='string' name='Country' ordinal='0' />
            <column datatype='integer' name='Cases' ordinal='1' />
            <column datatype='integer' name='Deaths' ordinal='2' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[corona]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:C28:no:A1:C28:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Country</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Country]</local-name>
            <parent-name>[corona]</parent-name>
            <remote-alias>Country</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <object-id>[corona_CF591FA309234AA38593CB6BC9141D88]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Cases</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Cases]</local-name>
            <parent-name>[corona]</parent-name>
            <remote-alias>Cases</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <object-id>[corona_CF591FA309234AA38593CB6BC9141D88]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Deaths</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Deaths]</local-name>
            <parent-name>[corona]</parent-name>
            <remote-alias>Deaths</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <object-id>[corona_CF591FA309234AA38593CB6BC9141D88]</object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='real' datatype-customized='true' name='[Cases]' role='measure' type='quantitative' />
      <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column datatype='real' datatype-customized='true' name='[Deaths]' role='measure' type='quantitative' />
      <column caption='corona' datatype='table' name='[__tableau_internal_object_id__].[corona_CF591FA309234AA38593CB6BC9141D88]' role='measure' type='quantitative' />
      <extract _.fcp.VConnDownstreamExtractsWithWarnings.true...user-specific='false' count='-1' enabled='true' object-id='' units='records'>
        <connection access_mode='readonly' author-locale='en_US' class='hyper' dbname='C:/Users/personal/AppData/Local/Temp/TableauTemp/#TableauTemp_1r49s3k0kt5zg11guz1oh1h6pkdw.hyper' default-settings='hyper' schema='Extract' sslmode='' tablename='Extract' update-time='04/15/2025 10:25:48 AM' username='tableau_internal_user'>
          <relation name='Extract' table='[Extract].[Extract]' type='table' />
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>Country</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Country]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Country</remote-alias>
              <ordinal>0</ordinal>
              <family>corona</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>27</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RUS_S2' />
              <object-id>[corona_CF591FA309234AA38593CB6BC9141D88]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Cases</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Cases]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Cases</remote-alias>
              <ordinal>1</ordinal>
              <family>corona</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>27</approx-count>
              <contains-null>true</contains-null>
              <object-id>[corona_CF591FA309234AA38593CB6BC9141D88]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Deaths</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Deaths]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Deaths</remote-alias>
              <ordinal>2</ordinal>
              <family>corona</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>27</approx-count>
              <contains-null>true</contains-null>
              <object-id>[corona_CF591FA309234AA38593CB6BC9141D88]</object-id>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;India&quot;' />
      </semantic-values>
      <object-graph>
        <objects>
          <object caption='corona' id='corona_CF591FA309234AA38593CB6BC9141D88'>
            <properties context=''>
              <relation connection='excel-direct.1ywnc541vxrjxt1488jfl0hzuaw3' name='corona' table='[corona$]' type='table'>
                <columns gridOrigin='A1:C28:no:A1:C28:0' header='yes' outcome='6'>
                  <column datatype='string' name='Country' ordinal='0' />
                  <column datatype='integer' name='Cases' ordinal='1' />
                  <column datatype='integer' name='Deaths' ordinal='2' />
                </columns>
              </relation>
            </properties>
            <properties context='extract'>
              <relation name='Extract' table='[Extract].[Extract]' type='table' />
            </properties>
          </object>
        </objects>
      </object-graph>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <worksheets>
    <worksheet name='Sheet 1'>
      <table>
        <view>
          <datasources>
            <datasource caption='corona (tOxmqE9sSWCNqdQnwEKU_Exercise 7)' name='federated.0avkhsw1tk8hjy14qw54w1iuzaer' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.0avkhsw1tk8hjy14qw54w1iuzaer'>
            <column datatype='real' datatype-customized='true' name='[Cases]' role='measure' type='quantitative' />
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='real' datatype-customized='true' name='[Deaths]' role='measure' type='quantitative' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[Cases]' derivation='Sum' name='[pcto:sum:Cases:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-field='[federated.0avkhsw1tk8hjy14qw54w1iuzaer].[Country]' ordering-type='Field' type='PctTotal' />
            </column-instance>
            <column-instance column='[Deaths]' derivation='Sum' name='[pcto:sum:Deaths:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-field='[federated.0avkhsw1tk8hjy14qw54w1iuzaer].[Country]' ordering-type='Field' type='PctTotal' />
            </column-instance>
            <column-instance column='[Cases]' derivation='Sum' name='[sum:Cases:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Deaths]' derivation='Sum' name='[sum:Deaths:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='1' field='[federated.0avkhsw1tk8hjy14qw54w1iuzaer].[Latitude (generated)]' field-type='quantitative' fold='true' max='18143494.600344285' min='-12115740.721872259' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
            <encoding attr='space' class='0' field='[federated.0avkhsw1tk8hjy14qw54w1iuzaer].[Longitude (generated)]' field-type='quantitative' max='27960421.246049024' min='-25658082.114301328' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.0avkhsw1tk8hjy14qw54w1iuzaer].[Latitude (generated)]' field-type='quantitative' max='18143494.600344285' min='-12115740.721872259' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.0avkhsw1tk8hjy14qw54w1iuzaer].[sum:Deaths:qk]' palette='red_10_0' type='interpolated' />
            <encoding attr='color' field='[federated.0avkhsw1tk8hjy14qw54w1iuzaer].[pcto:sum:Deaths:qk]' palette='red_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <lod column='[federated.0avkhsw1tk8hjy14qw54w1iuzaer].[none:Country:nk]' />
            </encodings>
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0avkhsw1tk8hjy14qw54w1iuzaer].[Latitude (generated)]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0avkhsw1tk8hjy14qw54w1iuzaer].[sum:Cases:qk]' />
              <size column='[federated.0avkhsw1tk8hjy14qw54w1iuzaer].[sum:Cases:qk]' />
              <text column='[federated.0avkhsw1tk8hjy14qw54w1iuzaer].[pcto:sum:Cases:qk]' />
              <lod column='[federated.0avkhsw1tk8hjy14qw54w1iuzaer].[none:Country:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0avkhsw1tk8hjy14qw54w1iuzaer].[Latitude (generated)]' y-index='1'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0avkhsw1tk8hjy14qw54w1iuzaer].[sum:Deaths:qk]' />
              <size column='[federated.0avkhsw1tk8hjy14qw54w1iuzaer].[sum:Deaths:qk]' />
              <text column='[federated.0avkhsw1tk8hjy14qw54w1iuzaer].[pcto:sum:Deaths:qk]' />
              <lod column='[federated.0avkhsw1tk8hjy14qw54w1iuzaer].[none:Country:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='false' />
                <format attr='mark-labels-mode' value='range' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.0avkhsw1tk8hjy14qw54w1iuzaer].[Latitude (generated)] + [federated.0avkhsw1tk8hjy14qw54w1iuzaer].[Latitude (generated)])</rows>
        <cols>[federated.0avkhsw1tk8hjy14qw54w1iuzaer].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{07FA241D-AD71-4D05-A132-92788E50222B}' />
    </worksheet>
    <worksheet name='Sheet 2'>
      <table>
        <view>
          <datasources>
            <datasource caption='corona (tOxmqE9sSWCNqdQnwEKU_Exercise 7)' name='federated.0avkhsw1tk8hjy14qw54w1iuzaer' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.0avkhsw1tk8hjy14qw54w1iuzaer'>
            <column datatype='real' datatype-customized='true' name='[Cases]' role='measure' type='quantitative' />
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='real' datatype-customized='true' name='[Deaths]' role='measure' type='quantitative' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[Cases]' derivation='Sum' name='[pcto:sum:Cases:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-field='[federated.0avkhsw1tk8hjy14qw54w1iuzaer].[Country]' ordering-type='Field' type='PctTotal' />
            </column-instance>
            <column-instance column='[Deaths]' derivation='Sum' name='[pcto:sum:Deaths:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-field='[federated.0avkhsw1tk8hjy14qw54w1iuzaer].[Country]' ordering-type='Field' type='PctTotal' />
            </column-instance>
            <column-instance column='[Cases]' derivation='Sum' name='[sum:Cases:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Deaths]' derivation='Sum' name='[sum:Deaths:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0avkhsw1tk8hjy14qw54w1iuzaer].[Longitude (generated)]' field-type='quantitative' max='28236242.577589247' min='-35241956.837128788' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.0avkhsw1tk8hjy14qw54w1iuzaer].[Latitude (generated)]' field-type='quantitative' max='18224153.91603842' min='-15276054.381767035' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.0avkhsw1tk8hjy14qw54w1iuzaer].[sum:Deaths:qk]' palette='red_10_0' type='interpolated' />
            <encoding attr='color' field='[federated.0avkhsw1tk8hjy14qw54w1iuzaer].[pcto:sum:Deaths:qk]' palette='red_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes customization-axis='layer'>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <lod column='[federated.0avkhsw1tk8hjy14qw54w1iuzaer].[none:Country:nk]' />
            </encodings>
          </pane>
          <pane generated-title='Country' id='0' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0avkhsw1tk8hjy14qw54w1iuzaer].[sum:Cases:qk]' />
              <size column='[federated.0avkhsw1tk8hjy14qw54w1iuzaer].[sum:Cases:qk]' />
              <text column='[federated.0avkhsw1tk8hjy14qw54w1iuzaer].[pcto:sum:Cases:qk]' />
              <lod column='[federated.0avkhsw1tk8hjy14qw54w1iuzaer].[none:Country:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
          <pane generated-title='Country (2)' hidden='true' id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0avkhsw1tk8hjy14qw54w1iuzaer].[sum:Deaths:qk]' />
              <size column='[federated.0avkhsw1tk8hjy14qw54w1iuzaer].[sum:Deaths:qk]' />
              <text column='[federated.0avkhsw1tk8hjy14qw54w1iuzaer].[pcto:sum:Deaths:qk]' />
              <lod column='[federated.0avkhsw1tk8hjy14qw54w1iuzaer].[none:Country:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0avkhsw1tk8hjy14qw54w1iuzaer].[Latitude (generated)]</rows>
        <cols>[federated.0avkhsw1tk8hjy14qw54w1iuzaer].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{2CD857F2-B183-4E28-8F1D-0B9E5BD8A1C1}' />
    </worksheet>
  </worksheets>
  <windows source-height='30'>
    <window class='worksheet' maximized='true' name='Sheet 1'>
      <cards>
        <edge name='left'>
          <strip size='218'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='2' param='[federated.0avkhsw1tk8hjy14qw54w1iuzaer].[sum:Deaths:qk]' type='size' />
            <card pane-specification-id='2' param='[federated.0avkhsw1tk8hjy14qw54w1iuzaer].[sum:Deaths:qk]' type='color' />
            <card pane-specification-id='1' param='[federated.0avkhsw1tk8hjy14qw54w1iuzaer].[sum:Cases:qk]' type='size' />
            <card pane-specification-id='1' param='[federated.0avkhsw1tk8hjy14qw54w1iuzaer].[sum:Cases:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0avkhsw1tk8hjy14qw54w1iuzaer].[none:Country:nk]</field>
            <field>[federated.0avkhsw1tk8hjy14qw54w1iuzaer].[sum:Deaths:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{FD46F5B2-B6B8-477D-B6CE-735C612C3BA3}' />
    </window>
    <window class='worksheet' name='Sheet 2'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0avkhsw1tk8hjy14qw54w1iuzaer].[sum:Cases:qk]' type='size' />
            <card pane-specification-id='0' param='[federated.0avkhsw1tk8hjy14qw54w1iuzaer].[sum:Cases:qk]' type='color' />
            <card pane-specification-id='2' param='[federated.0avkhsw1tk8hjy14qw54w1iuzaer].[sum:Deaths:qk]' type='size' />
            <card pane-specification-id='2' param='[federated.0avkhsw1tk8hjy14qw54w1iuzaer].[sum:Deaths:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0avkhsw1tk8hjy14qw54w1iuzaer].[none:Country:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{5F9511A7-75EE-4B39-8162-FB123433DE4E}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Sheet 1' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Sheet 2' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAgAElEQVR4nO2d+Y9k13Xfv29/9WrrbYY9HG6ShpQoipFDIVToOHFkO1ZsWYvtIDZgGDBg
      Gwjg3/NbgPwL+Sk/BHCAxLCSQKIkxBYlWWMtVExaXCQSpESOuA0507P1Ul319u3mh+pz59ar
      V/vWM3U/wGBmqqteveo6595zz6ocHBww0zQhkdyJRFGELMt6HlMUBYqiAAAMw4CmaQNfr5um
      iVqtttCblKwveZ4jz3NomoY8z7lwkoBOCmMMQRBA0zQoigJd1xGGIfI8BwBomgbbtqEoClRV
      RZIk0DQNgxZ5fepPJpEMIc9zZFmGLMvg+z4cx0EURVwwTdOEYRgTKUKapgjDEHEcA+iu7qZp
      cuGnx4Ig6HnMcRykaQpd7xd3pdPpMLkDSOYJYwxxHMPzPDiOgyAI+OOE4zj835ZljaUIWZbx
      XSTLsj5BH4SiKGCMwbbtnvcFAHXcDyWRjEuSJFzofd8HY6xH+AEgDEP4vg/P85Cmad/PCXot
      KRVjDO12G1EUjW2607VFU4mQCiCZC2Sb53k+1sqcZRkXzHa7jSRJen5Or8+yDFEUAQBXAE3T
      kKYp2u322Penqiqq1SpUtVfk5RlAMjOMMSRJgiiKEMcxDMPgB9Ay8jznwk+HWVVVkec50jRF
      FEX84CoqVrVahe/7Y5k9juP0CLuu61BVFYyxHnNLKoBkahhjyPMcruv2/D/LslKbnn5O0HMq
      lQo0TUMURfB9H0BXMWi11zQNYRhCVVW++g9CURRu55MZVq1WkaYp9xqJSAWQTE0cx4iiiAuX
      yCCbnp7HGINhGLBtG6ZpIgxDZFkGTdO4X9/zvJ7zQxAEqFQqQ+/JNE3Eccx3H8MwAIB7oog0
      TeH7vlQAyeSQQJqmyU0WVVUHenJEZSCzxDRNWJbFX0eHXCJJkj5ThzHGzwODEH9O7+G6Lr9W
      mqZQVRVhGHZdoxN8bomEE0URLMvigkWCLQq76MERnwOAH5ZrtRp3bYoUo7ujHi8jjmOuVHTO
      KB6cpQJIJoJWYdd1edSVzJk4jrlLU1EUbseTkhSFvFarIY5jhGHY55+fN4Zh8LMKoaqqdINK
      JofckVEUQdd1HpiK45ibM47jcPu7mPqgaRrq9XqPh6conPOGUjLofsg8kjuAZCKCIABjjNvR
      mqahUqnw9AZR0Em4iys/7RqdTmfgYXneiJ4jul/DMKQCSEZDQkorOQl1nudcCShgZVlWTyCs
      KPyVSoWfHZYl/CLFQJg0gSQjYYzxw6d4CKVgl+d5ALoHY8/zSl2V5H+nvxVFQaPRGOnWnDe2
      bSPLMp6IJxVAMhIKQAFdARZ3BFVVkWUZTNPkwlWW22OaJqrVao8CUJBrmTDGepLvpAkkKYXc
      l8X8fdM0uY8+SRJuCh0eHsJxHCiKAt/3ualRrVYBdBWnKOyUQrFMitFguQNISkmSBO12u8/v
      Tkll4gqvKAosy+KBLXoM6JpMReEXc4dGBbbmCe06IlIBJADQE7ACun5zy7JwfHzMV2nK4KQz
      AUVxKXHN8zyYptlz0AzDsEfIKQDWarX42WFZUBGOiFQACffDU+6+COXfA93cHEp7INNGVVXU
      63W0223EccwT0IrXALqHZBL8YakTi6Ls/eQZYM0hO58EWoQS1TzPQ5ZlsG2b2/1UY0veFMuy
      AIAHwwiKFtPPKIawbOEHUFoSKXeANYd8+QcHBzyNuejlIeUgU4fiALZt82J3yt0XX2/bNhqN
      Rs+BmCLHq/qsfWealdyJ5FSQ5zmPiBbbh4iBLHJXapoGVVV5ghkFs/I8h+d53L1If0QvEtA1
      lxqNBqrVKhqNxsBODYuirI5AmkBrCCWg6bqOSqUCXdexsbHBfy7m7BdXa9F3Tys9KQuZSqZp
      8rhAkTRNkWVZaX3uoonjGKqqwrZtvitJBVgzsixDp9PhwS3R3AFu7wqDAlTHx8fQNI3X11L3
      BxGKE6iqys8GImWmyKKhezEMg98bIBVgraDsS1VVe8oQaaUmDw6lJ8RxDF3X+Y5Rr9dRqVTg
      +z6/Du0iURT1mFFJkpQeOunQTPW/ZGKJRfKLQjTRCNkXaI2Iooh3adN1nefuWJbFC1OodFBR
      FIRhCEVReGHJxsYG96NTDpB4yCUoVlB8XPw5VWaJAum67kIjw7RzyUjwmmJZFmzbhq7r/ACr
      KAqiKEIYhgC6gn10dIQ0TfnOQLa6WOFFK30URXzlpn5A4mNlKIrCdwtRCarV6kJzgyhPSUSa
      QCeIPSxX5aZbBqKHRszloUZVJLgk6KQwnU6Hm0xxHMNxHP46KowRa3qn6TlLJtUizwfktZJn
      gAJJkqDT6WBra+uuVgCCXJIkxGmawjRNbv/T74CSxzY2NriyiAdlst1F4QfQl3IwLo7jlF5v
      HpDpJyLPAGuC6HkRU5LFbstlHpthiHUCZFrous6VadAZYBR0Npk3jDFUKpWe+mO5A6wJVMgO
      dM0TOhCKjaSGIQbG6KBKJgvQm2ZQ5v2ZhFlfX0Rs41JUcqkAa4IYmaWAEACuBCLkoiQzhhpU
      UV5Pp9PhB9l6vc7bllcqFb4jkLlEbRInvdd5Yts2giBAHMeo1+s9P5NeoDVB9H6I6Q1UvSX+
      CcOQe4WArgBRf32x2otqe0khoihCu92G53k8QFaWYToO80qToO4VtVoNm5ubfT+XCrAGFDuq
      WZYFx3G4oJInJ0kSrgAUNErTFGma8pRpEuZqtcp7ATHGoOs6fz0pGz1nlvueFQr6UUyjiDSB
      TqDhC6vMVlwUlH8D3BYIMmuCIOBZn5QuQHECANz1SZD3h2xpUUjJFSq2OozjGLZtl6ZbD4K6
      OM8DUkgK7vW911ze5S4gSZKebX9WyoZCrAqy3UnAxRwg4LaQZFnGD7i0mlM6tK7rfFcQzROx
      2IWqxFRV5cE12n0m9e3TrjKPxYga+JYhFUAgCAJ0Op25XCuOYxweHg5t5T2IeSsPVW3V63W+
      Elar1Z7uCHRQJWER+/YoisJfS1Vf5KenWuAkSfjrxC5s9Fk8z0O73R47A9RxnJlNKLp3wzC4
      MhaRJpBAlmXwPI/7zGnYg2maqNfrE61GhmFgY2NjIg8Izb2K4xhZlvH2gmKLwUkoNrQSXYBU
      1FKpVJDnObflxWJ28gSRiQSAH4JFk4qEXBT6IrQQhGHIpzgO+zzUc8iyrJmCYlS4Qx2ii6kW
      UgFKEOtaKbW3LE9FTBsQI6dAfweyUcRxDNd1e0oKXdflBSvUz0YMMA0TIqruoqBUETKFyOUJ
      3Pb107SW4+NjWJbVo/z0OyC3p1gZJpqQFHQq1ghTHcAgm1x8PZllZXUJ42JZFhhjaDabpXlG
      UgHGgFZIccQO9cY0TZPnyZCvXGwMO+71W61WX0kicPtwTt6ZYq5+s9nktrL4PDJDkiTB5uYm
      D2CJNrzv+1z4y2x0Mh+A25MfaQAFpUFQegH9Id8/KROlWtD1gK6yj+oIRwf0er0+U6o0HfIH
      ZTtIBRgD6oxQHO9D2ZUAela/IAhQrVb7gi5lUDkhCWDZF11WtMIYw+HhIV9NHcfB0dERN9/E
      6xwcHHAfPq3YjuPwFGjXdXsUgGx9cUgFRZKbzSaq1SqOj48BgFeUURwgCAI0Gg1ubtEuRDsb
      7V6jdkhN0yY2IQdRq9UGLkhSAcakbFpJGIZIkqRv9WSMwXVdpGmKZrM50FSJ45gL7TiIQyhE
      80sMOJUdoGlgNQlgEAS8oMW2bW7CUAoCmTfiqkk9ddI05WnMjDH4vg/DMLg5RDuReM9igY14
      38Dgcw1di2z3aUwgy7J4J+hBSAWYkUGmg2iKNBqN0hVI13XYts0HwxWvAfSeL2jlL6Ys07/F
      v4v3Qj8TD6qU1Uk1vGIkuNPpoFar8Vbm5OWxbZvP86JrUbsUmgQvflY60FM3OTK5Wq0WarUa
      n95YBs3xmqSHqKqqcBxn6HVFpAIsGHKH7uzs9LflO0lJFmfhigwS7jIFGJfigdLzPH5QzfMc
      lUqFe13a7TafByCWMdJZRLTpxSKbMAx7dg9KqTZNs2fBcF2XN80tW+GpsGaSz1iv1ycqqpEK
      sACKXxjly2RZhlqt1jdIgr40sVOCWLFVNCsmvRcKaNGOkyQJN93ElRxAaYG7iOd5fR4viviS
      E0A84NJZgBwJ4uvotYwx1Gq1PiUgFyx9hlFm0DTdpqUCLAjyttDKTqvs0dERdnZ2eOVTq9WC
      4zg8mFQ0c4Dpc2LoOiT4lMJA90W5PcMEq2iKicJPtjnFE8Qku+J9eJ7HvVCMMZ6CPShHh95j
      3C5yNHhjELRLiSkapmlKBVgUVE5o2zZPC9A0DbVajbsQW61WzyRDet2swk9+fHqtWOxOHpmy
      1XgQZYd4EmRyedJnKuby032IRTj0N80TGJT5OWi6uwjtNmJn6iK0+5Bni3a1MAylAiwC8q7Q
      qki2L2VhArcHxR0dHXFBEpPWJqEsCEeCI+4odH0x6lsmWMWDM1E0ySjPRxxGDYBHerMsw/Hx
      cd/hm2IohmHws0LZfVArRkpjKD5HLOEc9fsxDAOtVovvUsBJ6/aRr5ZMjGVZaDQa/AvTdR1b
      W1t9q7lhGNje3uZf7v7+/lQrfpmwkqDSBBc6nIrKMq5rsagEojCKsRAx6EXuR2qbkmUZdw2T
      6dRut9FoNAZWgNHheRDj2vukAJRWQWeVWq0mFWARUCBMdAcWffhk29IXTGeEYiRYfC1R5hkh
      oRKvX2YSiEI/yLQQHx+kkIwxmKaJRqMBANzVaVlWT/oCfT5SBgqgkTt1lMJT+5RBO8S4KEp3
      JpmYiqGqqlSASSGhGuSVoZWVEukGPYeIogi+7w8UBlGIh3lDioIt1vDSHzH4JCohdXem3P9B
      MQURSvkQc4SoJJIEtkyRHcfhu4S4Sw5C13U4jgPf93ueq+v6ROkm9Dso1j9LBRgBrTJk81Il
      VRm2bfPgziCKgjqskVSxCa0oVMVAjyjUZQGyMrIs43EIADyaXDxTlH2GZrPZI4Di+UPciSjN
      gzxFNHOAUiNGreJkvhSLZObVv0kqwBBUVcX29ja3V0W/dPF5tVptZIZjEdFcGZYiQD8XhYse
      pyS84o4kxg4GmTSO43CXKFWIic8ftNtQk9lBvzOROI55G8Qsy3h+T1nn6EEUI+ZiTtGsSAUY
      AK1yJHS1Wg1pmva0FrEsC1EU9RWXTAIVloveH/GASh6kPM/RbDaRpikfRK2qKk9ZIIEdZJqV
      RY9p9ykbWl08UIuMO9u3eD+U9SoefMcJcAHgcQyq3JtX0bxUAAHKHafWf0Whbrfb3MNDGZBU
      6zqp8JMgkv9aURSeS0OQzer7Pur1Ok8noCKWZrOJTqeDo6Mj7o8XV9ZRB0wxClw0zQYxyjNT
      9tw4jvn7iIpO8YlBqRDFa1FC3ixNt4pIBTiBSvvSNEUURX3VU61WiwvYuIlWwxDtX2pPQv32
      aUWuVqt8pykqBqU2UBIbeVfiOO5JRRY/Qxll5lHRDCsqhFgpNow0TUu7PVNGKXWkoFbt40Bn
      gnkhWyOOgAZKkGuzVqvNbfUREYWv0+kgDEO+04z6wsnH7/s+9vf3++5RDFyNy7A4gaIo2Nzc
      HNlKMc9ztNvtvkQ/cqFSZiilXs/jUDspsih+BMfHx9xHP47felpEVyUdFqkzwzivpd1rZ2eH
      J6yJ15xEuEYFychMFAtmyigedsXItJjp6fv+0sclEdIEGkJxkvmivyTKf6fD9zhmBqGqKprN
      Ji9zdF2Xn08mXfnpNcPe23VdeJ4HXddRr9f7dgN6T3H3GhS8K/OsLQu5Awyh2NKkXq8vzPyh
      FZWS5SbJhCSoAmpnZ6enoFz0/NB15/E5KMns8PAQ7Xa75/0Iquga5Z2iM9ayFUHuAEMQvwzy
      uc/bTqUvndqfzHJ9MoWAbt5+sQEW0J9GIa7AZSkWo+6Hnk+FNZqm8RkLdHYadc+kIAcHB7y+
      eVnnAbkDDEFcJTc2NiYK3kzyHqRY8/rSFUXB2bNne84BxZ+L70/3IN5H0QNEbVSK1yl6msRz
      QdkZpujNEiHTbdSIpXkiFWAI5O+u1+tLH+o8LbSa0yCIMuEvCq74WHEotph6IQbAxLyk4g5C
      Wadl8YKyzFL6NwUEKUV8GUgFGIKu631JX6cdRVF4Pj418xqUUDdMEcSdAejPViUBFesNRK9O
      WUtI+jmZPGXnE2CyLM9ZkQowgu3t7YUcfBeJKMSiUBXNGtH7Mij1QUzjprJCUXHKFoYkSbC/
      v983G6Ds/CFCdRPFmulFIg/BQ5inXb4qHMeB67p8LnBZwhtRdH3SAZWUQCyiL1sUxGsNqmwT
      s0YpAEvd5KgqTnzfRf/+pQIM4U4XfkpBBoBr167xjFagdxcYtMMVYwJiEKtarfJ8/kqlwlNI
      BiEqB9UeUPNbOmArisIjx1EU8cn0i0QqwF0OCahpmtjd3e1Z+QcpwSCvESkBxSxarRafO0AF
      MaLbs/g+wO3JkjRbWKyco51AURTeiGvRSAVYAxRFwfb2NlqtFoDb9QWimTLMNi+aRuQc2N7e
      BgDeZfrGjRs8WbDMi6MoCsIw5PexubnZkx6hKN05BIyxqRsETMqddbpbIIMCQXcLxXTnYakO
      xeEY1DdUdI8qSrdvp+u66HQ6UFWV5y9Rc1zxvEHzBlzX5QO6qZ6BBuuJ72kYxkLiLkXkDlDg
      Trf7ByEKfVkkuAxN0/D23iG++dwbeGfvAFXbwqcfewCfffIR6IKrktrBe56H7e1t7i0S5wxQ
      j1EqHtre3ubmDlWYLdP9SUgFOOFuFXyizJ4eloSm6zr+7sW38F/+z7Po+LcPtz969R18/+W3
      8J//9DfhmBpXKjJXqN26aZoIggCGYfAO2UBXWagVJNVArELwCWkCrQmDBL1M8RVFwTvXjvqE
      v3sd4MU3ruC/fu05qII5RBwcHPBoMBXtiBNtqPiFzJxVCj8gd4C1YdyzDWPdNoYXX3yrT/hF
      nnvtMm4eeTi74fR0miPffvH9qAvcPKu55oHcAdYEiuAOUwTxEHr5+uHQ6x27AY69bn8fCo6R
      O7XoYtU0Dc1mE47jLCSjdhakAqwJZHqMSusg4a1Vhpc7moYGU9f488nLU1YTQB2pTyNSAdYE
      WoWHQR6hPM/x1CcegqYOXqk/dG4b57brpRmdoouVzKLTtOoD3V0rDEOpAOsEuRuHCeNtBXgA
      /+qXPlL6nLpj4c8+/2kYWn+kl64xLO//NJDneTcaveobkSyXarXKp9UMQ0WO//hH/xr3bNXw
      9y+9hYO2D1PX8JHz2/jTzz+Jf3rh3FiR2mkbhi2Do6u/kG1R1g0yUzzPG9jjlCAf/WEnQNuP
      YWgqdpoOdLVrQhT7dRap1+tjNb1aBUmS4MbVD+QOsG6QV8ayLNy4cQNRFPUMqqNiFXHoXd3W
      Ubd1IYeof4xTkWazyQeEnFZqG5tSAdYVy7Jw7tw57sG5du0a9xDpug7P89BsNnsOtKJrUzzk
      FrM+qRzztHPp2WekAqwzlUoFruvCtm1sbW31TaZst9tgrNvFjQSaml1RG0dqxSLO4VpGFuc8
      qJ09JxVgndE0jbcdp8MxKQCNODIMgx+aKY+nLJorjmG9desW0jQdu4nuqjj/sSekG3TdoQix
      rus8TiC2QlFVFdVqlTexHZXKQIogTr48jVBHO6kAaw4FyNI05WNdyZ5XVRWGZaHiVGHbNlqt
      1lg5RaOm5JwG6Axzuu9SshQohydNU2xubuLo6KhbQK+beL2tQgPwcL2KrcZ4Ed1RXaNPC57n
      SQWQdKEh2oqiYGNjA61WC26uwE8BRQESNrpDBnmUKB+IKslOoyuUBmZLBZBwyGyhAdVOFOPD
      NQ2qAti4XcguEgQBsizjh2YKnlGbRHEAxmlRBKpflqkQp5hhNbvzJE3T0mqxPM8BluOsRRPn
      u+1QxAIWxhifRUCBNLERlzhSljrGiZ32VqUQiqLgzJkz0gQ6zSxLOJIkGeixEVOYSfCLvX9o
      Avug+6ViepoUX6lUoOs6L5pfhRJQNZqiKFIBJMD1d1/H86++jc/82y+gaQHIIjx38Zv46dvX
      8Uv/8nOI3v0RXrt8gEjfwG8/+QCe/elVfPHf/x6OLr+ND33s4xh05BUb5Oq6jvPnzy/tM43C
      dV0cHBzIZLh1JwgC3Lq+h7cuvYL7H/91nK0CyDN4YQzm7+Fbz13Bv/v8ryJpX8UPXr2JuH0N
      /+RjG3jjsoXdB87jsY/sIjsphImiCI1GY6wJ8Kvm8PAQcRzLOIAEaG7twNIFUVA1uFd/hi8/
      /T2ce/AhAMBbb76JD114GP/84/fhu8/vwTE7ePn7X8Nf/80P0e50cPXq1dJD8mml1Wphb29P
      mkCSHC9952v4v88+D+d1F3/+Gw/jADv4+cuvIElCXL91C/6BgiP1PJ66pwrgcXzqRgf3PfpR
      XL70BnIAu7u7OHvmDG7dulXa0JY6vd26dQvNZhOmaZYqyjJ3jd3d3a6LVppA600QBDOnLVCl
      2c2bN8EYw+7uLs8QVRQFvu/j8PCQz0DLsoynWQDg85eXnUEq4wASHqya9RqapmF3dxd7e3sI
      goA3y2q1WtybRO1TgH5vUhiGcF0XZ86cWdpOYBiGVIB1xzTNuXVsUBSFr/5AV8hVVUWWZbwJ
      1sHBAWzbhqZpPYl1nU4HlmXB8zws0yKRCiCZK2KgrFKpdGsFGNDONDS2bCCNEIYhL7ihfkI0
      V2xvb68nqHbPPfcsNGgmvUCShUH5QG6u4lJHwbVQ4enSNEfg8PAQ+/v7fNI99RfyfR++7+P9
      999faMduqQCShcAYQ6fT6RbbqAz3Vhh2TIYkSeD7PqIo4rXHlUoF9XodQLee4Pr16+h0OrxA
      Z9jkmVmRJpBkLqRp2jMNPssyHBwcdA+aeYr77G6CXHzy3HPnzqHdbqNarfIxSNVqFWmaYnd3
      tyd5zvM8Pvly3kg3qGRqxFwe3/eRJMlM1wvDcOBYJJolNu/MUmkCFRCno0iG0yuEDLc+uIRv
      /t0PkPCa+AwfXHoF3/nBywCA9s138df//b/h719+G++98gP81Ve+BTdOcOnSL5CP+J1HUYRO
      p4P9/X0euxCn0k+LNIEKUFHHaWvjffphiHMLFTNFxoDuby9Drm9Dyy8BLMY//ugn+NXf/2Oc
      sTVc/O4beOKROl5/6VXUzj041opOTb2Oj4/5Y6ZpotlsTr0ryB3gBMYYrxKiBlCzri7rhYrz
      Dz7Ym1MEEw9++D7oqgKkIa4f3MIzX/5LfPXiC7hwTwU/fu0GkqyDly4+jW8997OhVydXaFHI
      4zjGwcEBb+Ey+V1LOJSnTr7s4iRFyQzoNu679zy+8Ed/grx9BRee+Ax+/VMXsGNpuO+pzyI/
      ulz6MlVVue0/qO4gz3P4vj/VgiVNoBOoHpaEXxz2QEqwjMnldy4xnv36/8ZPP7iF165n+N0n
      70NavQcvPPN1XD50sZ/W8Nv/4gl84+kv46NPfQ5gKbLKWXz0kcdw7Rtfxf1P/FbfFVVVRQQD
      F9/sYO84wj11E7/ykQZqWtYn7OPMPihDeoFOSJIEURTBcZy+XySZQ8Omqq878/YCKYoCzTDx
      zTfa+ODodhxgt27gC49tgmW3E/gURUGz2ZzKVSp3gBMMwxh48BV3Bkk5g6bAxHEM13V7VuxO
      p4N6vc7nBlMfIXoOzyXKFFxv92aq7nsJ3DhHVfg6qtXq1HECqQCSuTBogVBVFa7rArg9folS
      HqjPaKfTAXB73jBwUk6pAhVDRSKcw0xdhandFnTLsmZqwS73c8lCISEn87E4U8AwDDQaDTiO
      wxPieNc2JcenH6zD0rv/NzQF/+yBOio667n+LGap3AEkC6der8O2bQRBgCiKuFNBVARVVXme
      EBXGZGmKh7cN7NZ3sO8l2HJ0NC2l56wxq1NCKsACuBM6Iy8TRVF43QH1Fy3OHHAch3enK57F
      NioKNh2dm1DF1os06Yb6DU2C/JYWgBT+wdCBVxTUPM95JHfY726QcA/KHxoH+U2dEMcxL+0b
      hugSXWV3szsROgBvb29zk4fSph1bxzNf/Su8f2Thc3/4+3hws4rrl36Mr3znxzj84Ao++x/+
      Am/97ddxmKn45c/+Gl773kXk5z6BL336PK54NTx+4dxU9yQV4ARq3VetVoceqsSRQFL4JyOO
      Y3xwHOF6aONCNYfrHiGOYwRBgLpxhMh6FF/80sM40+imR+8+8iT+4sIn8b2Lz+KxHQVXzn8c
      /+YBG63j62g+/BRy/xree/8AWw9sIMmmS1uRXiAB3/cRBMHInBJqACsVYHLiHEhzBTm6wavN
      zU3s7u4CWYhbN/fwwg+fwcWfvMeff3j5TdjnHoajGdDSFn7+7h5Y8wIe3Qqws7WN49Y1fP+Z
      v8FP3j+a6n6kAhRwXZf7rSXzxTAM3F/X8dFaioqa88CXqqqwNy7g3EYCqBosXce7l98F8gRv
      vHsTj164Dyx1sX8cAVmA406IRz7xCTClgvu3HQDTL0QyFeKEKIpwfHzMJ6Ps7OzIFX4BRFGE
      q1evwnEc7tVhjHXHMLktHLoJzp7dQRh4qFer8IMYFccGGEPn6BY6EXDm7A4MJUWYaDDVBPuH
      bWzt7GB7c0N6gWZB/OVJG3/+MMZ4IQshOhLs2gburXWfV6vWwABUKhZw8l00t+9Bk79Sg6MB
      gI7d3crU9yQVoADZ/7IqbP4wxnB0dIRKpdI3c5gK37Msw9HREba2tgB0XaSmaXLP0byRZwAB
      mfW5eMR0B920kGgWNN3gu0Cn00Ge57xtCp/muKDvQ37LAmJUUpo/80ecPqnpBn7RUfDKIfC2
      ezsAFscxtre3oSgKb561yKF7UgEKGIax9Cat64RlWd1cIEVFOwEyBhzHAE5iK6ZpQtO0nkky
      i1yM5BmgQK023ijQIqJLT1JOHMeI47i7oucpPlw3cDNgOOcoYHkGTdNw77338ozRZTTKlQpw
      Am3P0zaKpfGgi16x7jQoT4c6vNm2DcMwkOc5to0MZ08aZuU54x2lKX2aUicWGR6vJo4AAAcV
      SURBVHSUCiAwi/BSRRNlgkol6BIEQU+lV7PZ7HtOMQfL9/2en9dqtYVV5Mn9+gTLskq/nElI
      0xSHh4cyklzg8OolPPui0PaE5Xjxu0/jf3712+jEGQCG1/7h23jvIMLPn/82nvl/ryPLUlz+
      4IOF35vcAU6YR2YndZaQh2iRBFdvBoiD9u2Hjl7BG/Gj+I1HXbz0s3fx5LkUr772OnYqF5AE
      WzDzK7jyho9w67GF353cAeZAnueI4ximaaJWq8mDcA8GHv/kY1DFtaX5YWjvXcTT338N956p
      4/mfXMGv/crjgNWA03kbVw5CXDls4x//9n/htff3F3p3cgeYA5RFurm5KbNExyC6+gqMT34R
      f3DmGn740o/w7pvv4OV/uIL2A8B/+rM/wLmfvgDVu4H8lz+Da1evAB9/aGH3IhVgRuI4RhiG
      cBxHVoKV4uHrf/k/8ItWB4dpHZ+818C9938KjReexjfesfFbv/M5/N4XHAQ33sR7eBB60oHS
      uA8PPfwQXv7KM3jiN7+00LuT2aBTwhhDEARwXRfValVGjwdAqQ2zsEgvkFyypiQIAhwfH0NV
      VSn8Q7BtG3mew3VdPj3SMAyYpjm2s0BGgk8hhmHwAm/JYAzDQBiGvPWkruu8x6phGCtfOKS7
      Ykp0XUetVkOlUln5l3ja0XUduq4jDEO+YARB0BfwWgVy+ZoSKfTjE4Yh77pBLmIajrdq5A4g
      WTiMMe4sALqLR6VSORXxktXfgeSuh2x9MnnIa3YakAogWTi6rmNra4u3Si+rt6YRVcueyCMV
      QLJwNE2DaZrY3NxErVbD3t5eqaBPO+VlFqQCSJaCaZrQdR2O40DTtL6mA1SHvWznglQAycKh
      7tCNRgNpmiJNU1y/fh1RFM2t+8a015FuUMlSIM+PYRhQVZVPiZnn9adBKoBkaVD0d2Njg/9/
      1UgFkCyd0yD4hDwDSNYaqQCStUYqgGStkQogWWukAkjWGqkAkrVGKoBkrZEKIDlVZFmGPM+X
      NqBEKoDkVMAYg+d5fEDJspCRYMlKoak81Dad2p8sSwmkAkhWDjUWW0WKhDSBJCuDMYYwDBFF
      0co6REgFkKyMJEn4MLw4jldyD9IEkiwd8vDQaFQAU0/mmRW5A0hWAh1+iVX1CJI7wAlZlvF5
      VOSKMwxj1bd1V1J22E3TdCW7gFSAE7Isg+d5PY81Go2lu+XuZvI8R5IkME0TjLGekkh6fNlI
      BRhCu90d62PbtuwBOgcYY/B9H4Zh9Hl95BngFEO9LZcVnr/bIFs/TVM++rTo9VmVF0gqwJh4
      nod2u82/PKkM46MoCpIkQRiGAFA6RVO6Qe8AsizjZpGiKKjX63I+wBikabqSplfjIHeAKaGO
      x2EYrsVuwBjjfyZF13W4rsunxp8m5PI1A2IS191KHMeI45h7bGzbnurz2raNMAyHNsPK83xp
      vUEpDiEVYEbu9rGoQRD0CG0cx/zzqqoKxhh0XR/o26efm6Y5tBscdYde9GJC75PnOXzflwow
      K3fz6l9GkiRIkqTnMcMwYFlWjyuThD8MQ94d2jTNnvSHVRCGIc8/AqQJNDWWZUHX9YWN75wX
      1IxWVNRJdqxarYbj4+Ohz0mShB90qfNzu92GrutI07THAzQIaqC7SBhjfd4mqQBTYFnWHTMa
      Ncsy+L7PV21qQ25ZFh9UMcxDM0pwCRJ6cfLjJIde0zQX8vukuAMtVEUTTCrAFCzqy5oVSi8g
      Tw0N8wbQZ7aIgq1pGjRNg+M4fYfQSqUykdlSfJ9J7n0RUKmloiil7yEVYEJo0MNpI8syuK47
      VcvxLMuQZRk0TYNt20jTlB9sl6XoizJ/FEWBpmkDFfP0fZOnnNMw2VBcycj+nsewiTAMYVkW
      XzEpaW0ZeJ4Hxthcd1eKWwxbFKQCTADZylmWLX0XIEEkYSchmadXhTGGVqvF/y96SxYNmSpR
      FPExSrMqQpqmvNPEIKQCTICqqrBte2X2f9GFdzeSpina7TYqlcrMRTKD4hMiq9/P7yBWefAN
      gmBsj8zdQBAEM+9uQRAMXf0BqQATsSoFyPN8rgPl7hSKUehJ8H1/rDwtqQATILoYF4V4cKMW
      geuafp3nOdrt9kRKwBhDFEVj75byDDABWZbxfJU8z0u311kPb3mew/M8HkQyTXNq3/rdAB2O
      6/X6yN9rlmXodDojzR4RqQATQit0mqalhR2apvUc3nRdn8h1SsX5xKoKRU4TaZryUkrx90mR
      bCKKoomEH5AKMDG+7/P8mjIoIEUYhoFarTZy9SKlutu9PNMSRRGiKOLBOjJxyCtnGMZUh2al
      0+mwWq027/u944jjuHRFnwcUVKKVi1YxcWdwXXetTZ1ZGZTqMAq5AywBOpiVYRgGDMOQwj8j
      0zoJpAKsmLL8esnykG5QyVqjL9L2vZMoel8k68H/BxZTvEq5zIGYAAAAAElFTkSuQmCC
    </thumbnail>
  </thumbnails>
</workbook>
